package test.study.java.mianshi2020;

/**
 * Created by dell on 2020/5/18.
 */
public class Test0518 {

    public static void main(String[] args) {
//        int[] arr = {2,3,1,4,8,5,6,7,3,1,10,30,43,3,2,30,21,44,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                    11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26,22,11,12,14,15,21,22,23,1,3,4,2,21,19,18,17,14,10,21,21,23,22,
//                11,21,12,12,23,15,24,27,29,29,12,11,10,9,6,4,5,7,3,2,8,0,12,0,21,23,25,25,26};
        int[] arr = {4,3,2,5,1};
        kuaisu2(arr,0,arr.length-1);
        for (int i : arr) {
            System.out.print(i);
        }
    }

    public static void findSecond(int[] arr){
        long start = System.currentTimeMillis();
//        maopao(arr); // 25ms
//        guibing(arr,0,arr.length-1); // 3ms
        int second = findSecond2(arr); // 1ms
        System.out.println("第二大："+second);
        long end = System.currentTimeMillis();
        System.out.println("耗费时间："+(end-start));
    }

    public static int findSecond2(int[] arr){
        int max = 0;
        int second  = 0;
        for (int num : arr) {
            if (num > max){
                second = max;
                max = num;
            }else if(num > second){
                second = num;
            }
        }
        return second;
    }


    /**
     * O(n²)
     * @param arr
     */
    public static void maopao(int[] arr){
        //冒泡
        for (int i = 0; i < arr.length; i++) {
            //外层循环，遍历次数
            for (int j = 0; j < arr.length - i - 1; j++) {
                //内层循环，升序（如果前一个值比后一个值大，则交换）
                //内层循环一次，获取一个最大值
                if (arr[j] > arr[j + 1]) {
                    int temp = arr[j + 1];
                    arr[j + 1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }

    /**
     * O(n²)
     * @param arr
     */
    public static void xuanze(int[] arr){
        //选择
        for (int i = 0; i < arr.length; i++) {
            //默认第一个是最小的。
            int min = arr[i];
            //记录最小的下标
            int index = i;
            //通过与后面的数据进行比较得出，最小值和下标
            for (int j = i + 1; j < arr.length; j++) {
                if (min > arr[j]) {
                    min = arr[j];
                    index = j;
                }
            }
            //然后将最小值与本次循环的，开始值交换
            int temp = arr[i];
            arr[i] = min;
            arr[index] = temp;
            //说明：将i前面的数据看成一个排好的队列，i后面的看成一个无序队列。每次只需要找无需的最小值，做替换
        }
    }

    /**
     * O(n²)
     * @param arr
     */
    public static void charu(int[] arr){ // 4,3,2,5,1
        //插入排序
        for (int i = 1; i < arr.length; i++) {
            int key = arr[i];
            int j = i - 1;

            while (j >= 0 && key < arr[j]) {
                arr[j+1] = arr[j];
                j--;
            }
            arr[j+1] = key;
        }
    }

    public static void kuaisu(int[] arr,int low,int high){
        //如果指针在同一位置(只有一个数据时)，退出
        if (high - low < 1) {
            return;
        }
        //标记，从高指针开始，还是低指针（默认高指针）
        boolean flag = true;
        //记录指针的其实位置
        int start = low;
        int end = high;
        //默认中间值为低指针的第一个值
        int midValue = arr[low];
        while (true) {
            //高指针移动
            if (flag) {
                //如果列表右方的数据大于中间值，则向左移动
                if (arr[high] > midValue) {
                    high--;
                } else if (arr[high] < midValue) {
                    //如果小于，则覆盖最开始的低指针值，并且移动低指针，标志位改成从低指针开始移动
                    arr[low] = arr[high];
                    low++;
                    flag = false;
                }
            } else {
                //如果低指针数据小于中间值，则低指针向右移动
                if (arr[low] < midValue) {
                    low++;
                } else if (arr[low] > midValue) {
                    //如果低指针的值大于中间值，则覆盖高指针停留时的数据，并向左移动高指针。切换为高指针移动
                    arr[high] = arr[low];
                    high--;
                    flag = true;
                }
            }
            //当两个指针的位置相同时，则找到了中间值的位置，并退出循环
            if (low == high) {
                arr[low] = midValue;
                break;
            }
        }
        //然后出现有，中间值左边的小于中间值。右边的大于中间值。
        //然后在对左右两边的列表在进行快速排序
        kuaisu(arr, start, low -1);
        kuaisu(arr, low + 1, end);
    }

    public static void kuaisu2(int[] arr,int low,int high){ // {4,3,2,5,1}
        if (low < high) {
            int i = low, j = high, x = arr[low];
            while (i < j) {
                while(i < j && arr[j] >= x) { // 从右向左找第一个小于x的数
                    j--;
                }
                if(i < j) {
                    arr[i++] = arr[j];
                }
                while(i < j && arr[i] < x) { // 从左向右找第一个大于等于x的数
                    i++;
                }
                if(i < j) {
                    arr[j--] = arr[i];
                }
            }
            arr[i] = x;
            kuaisu2(arr, low, i - 1); // 递归调用
            kuaisu2(arr, i + 1, high);
        }
    }

    public static void guibing(int[] arr, int start, int end) {
        //判断拆分的不为最小单位
        if (end - start > 0) {
            //再一次拆分，知道拆成一个一个的数据
            guibing(arr, start, (start + end) / 2);
            guibing(arr, (start + end) / 2 + 1, end);
            //记录开始/结束位置
            int left = start;
            int right = (start + end) / 2 + 1;
            //记录每个小单位的排序结果
            int index = 0;
            int[] result = new int[end - start + 1];
            //如果查分后的两块数据，都还存在
            while (left <= (start + end) / 2 && right <= end) {
                //比较两块数据的大小，然后赋值，并且移动下标
                if (arr[left] <= arr[right]) {
                    result[index] = arr[left];
                    left++;
                } else {
                    result[index] = arr[right];
                    right++;
                }
                //移动单位记录的下标
                index++;
            }
            //当某一块数据不存在了时
            while (left <= (start + end) / 2 || right <= end) {
                //直接赋值到记录下标
                if (left <= (start + end) / 2) {
                    result[index] = arr[left];
                    left++;
                } else {
                    result[index] = arr[right];
                    right++;
                }
                index++;
            }
            //最后将新的数据赋值给原来的列表，并且是对应分块后的下标。
            for (int i = start; i <= end; i++) {
                arr[i] = result[i - start];
            }
        }
    }

}
